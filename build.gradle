plugins {
    id 'java'
    id 'application'
    // JavaFX plugin
    id 'org.openjfx.javafxplugin' version '0.1.0'
    // Shadow plugin for creating fat JARs
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.pranav'
version = '1.0.0'

repositories {
    mavenCentral()
}

// Define the Java version you are using
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // Or your Java version (e.g., 21)
    }
}

// Configure the JavaFX plugin
javafx {
    version = "21" // Use a recent JavaFX version
    // List the modules your application requires, based on your module-info.java
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    // Add your project's dependencies here
    // SLF4J API
    implementation 'org.slf4j:slf4j-api:2.0.13'
    // H2 Database
    implementation 'com.h2database:h2:2.2.224'
    // SQLite JDBC Driver
    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'

    // Add a simple logging implementation for SLF4J at runtime
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.13'
}

application {
    // IMPORTANT: Set the main class to the new non-modular launcher
    mainClass = 'com.pranav.temple_software.Main'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Configure the shadowJar task to create the final executable JAR
shadowJar {
    // Set the base name for the output JAR
    archiveBaseName = 'pranav6266-temple-software'
    // Set the classifier to '-all' to distinguish it from the standard JAR
    archiveClassifier = 'all'
    // Set the version from the project version
    archiveVersion = project.version

    // This ensures the manifest in the JAR points to the correct main class
    manifest {
        attributes 'Main-Class': 'com.pranav.temple_software.Main'
    }
}

// This task makes running from the IDE easier
run {
    // This ensures the application runs with the necessary JavaFX module arguments
    mainClass = 'com.pranav.temple_software.Main'
}
